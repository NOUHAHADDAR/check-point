import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.preprocessing import StandardScaler
from sklearn.cluster import KMeans
from scipy.cluster.hierarchy import dendrogram, linkage, fcluster
from sklearn.decomposition import PCA

df = pd.read_csv("credit_card.csv")

df = df.dropna()
df = df.drop_duplicates()

numerical_cols = df.select_dtypes(include=['float64', 'int64']).columns
for col in numerical_cols:
    q1 = df[col].quantile(0.25)
    q3 = df[col].quantile(0.75)
    iqr = q3 - q1
    lower = q1 - 1.5 * iqr
    upper = q3 + 1.5 * iqr
    df = df[(df[col] >= lower) & (df[col] <= upper)]

df = df.drop(columns=['CUST_ID'])

scaler = StandardScaler()
df_scaled = scaler.fit_transform(df)

linkage_matrix = linkage(df_scaled[:, [df.columns.get_loc('PURCHASES'), df.columns.get_loc('CREDIT_LIMIT')]], method='ward')

plt.figure(figsize=(12, 6))
dendrogram(linkage_matrix, truncate_mode='lastp', p=10)
plt.title('Dendrogram - Hierarchical Clustering')
plt.show()

hc_labels = fcluster(linkage_matrix, t=4, criterion='maxclust')

plt.figure(figsize=(8, 6))
sns.scatterplot(x=df['PURCHASES'], y=df['CREDIT_LIMIT'], hue=hc_labels, palette='Set2')
plt.title("Hierarchical Clustering")
plt.show()

inertia = []
k_values = range(1, 11)
for k in k_values:
    kmeans = KMeans(n_clusters=k, random_state=42, n_init='auto')
    kmeans.fit(df_scaled)
    inertia.append(kmeans.inertia_)

plt.figure(figsize=(8, 5))
plt.plot(k_values, inertia, marker='o')
plt.title("Elbow Method")
plt.xlabel("k")
plt.ylabel("Inertia")
plt.show()

kmeans = KMeans(n_clusters=4, random_state=42, n_init='auto')
clusters = kmeans.fit_predict(df_scaled)

pca = PCA(n_components=2)
df_pca = pca.fit_transform(df_scaled)

plt.figure(figsize=(8, 6))
sns.scatterplot(x=df_pca[:, 0], y=df_pca[:, 1], hue=clusters, palette='Set1')
plt.title("KMeans Clustering (k=4)")
plt.show()
